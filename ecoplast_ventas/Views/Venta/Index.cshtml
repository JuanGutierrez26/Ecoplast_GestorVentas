@model ecoplast_ventas.Models.Venta

@{
    ViewData["Title"] = "Venta";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section EstiloDT {
    <link rel="stylesheet" href="~/lib/datatables.net/css/jquery.dataTables.min.css" />
}

<hr />
<!-- Tabla de venta -->
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Tabla Venta</h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <td>@Html.DisplayNameFor(vnt => vnt.id_venta)</td>
                        <td>@Html.DisplayNameFor(vnt => vnt.fecha)</td>
                        <td>@Html.DisplayNameFor(vnt => vnt.id_cliente)</td>
                        <td>@Html.DisplayNameFor(vnt => vnt.id_empleado)</td>
                        <td>Acciones</td>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal de venta -->
<div class="modal fade" id="FormularioVenta" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
     aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-12">
                        <form>
                            <div class="form-group">
                                <div class="form-group">
                                    <label asp-for="id_venta" class="control-label"></label>
                                    <input asp-for="id_venta" class="form-control" />
                                    <span asp-validation-for="id_venta" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label asp-for="fecha" class="control-label"></label>
                                    <input asp-for="fecha" id="fecha" type="date" class="form-control" />
                                    <span asp-validation-for="fecha" class="text-danger"></span>
                                </div>
                                <!-- Dropdown para Cliente dentro de un form-group -->
                                <div class="form-group">
                                    <label for="clienteDropdown" class="control-label">Cliente</label>
                                    <select id="clienteDropdown" class="form-control">
                                        <option value="">Seleccione una cliente</option>
                                        <!-- Las opciones se agregarán aquí mediante JavaScript -->
                                    </select>
                                    <span asp-validation-for="id_cliente" class="text-danger"></span>
                                </div>
                                <!-- Dropdown para Empleado dentro de un form-group -->
                                <div class="form-group">
                                    <label for="empleadoDropdown" class="control-label">Empleado</label>
                                    <select id="empleadoDropdown" class="form-control">
                                        <option value="">Seleccione un empleado</option>
                                        <!-- Las opciones se agregarán aquí mediante JavaScript -->
                                    </select>
                                    <span asp-validation-for="id_empleado" class="text-danger"></span>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btn_cerrar" class="btn btn-outline-secondary" data-bs-dismiss="modal" aria-label="Close" onclick="location.reload();">Cerrar</button>
                <button type="button" id="btn_grabar_venta" class="btn btn-outline-primary"></button>
            </div>
        </div>
    </div>
</div>

<!-- Modal general -->
<div class="modal fade" id="FormularioGeneral" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
     aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Detalles de la Venta</h5>
            </div>
            <div class="modal-body">
                <!-- Información de la Venta -->
                <form id="formVenta">
                    <div class="d-flex align-items-start gap-3">
                        <div class="form-group flex-fill">
                            <label for="codigo_venta" class="control-label">Código Venta</label>
                            <input id="codigo_venta" class="form-control" readonly />
                        </div>
                        <div class="form-group flex-fill">
                            <label for="cliente_venta" class="control-label">Cliente Venta</label>
                            <input id="cliente_venta" class="form-control" />
                        </div>
                        <div class="form-group flex-fill">
                            <label for="fecha_venta" class="control-label">Fecha Venta</label>
                            <input id="fecha_venta" type="date" class="form-control" />
                        </div>
                    </div>

                    <!-- Tabla de Detalles de Venta (vacía por ahora) -->
                    <h5>Detalle de Venta</h5>
                    <table id="tablaDetalleVenta" class="table">
                        <thead>
                            <tr>
                                <th>ID Producto</th>
                                <th>Producto</th>
                                <th>Cantidad</th>
                                <th>Precio Unitario</th>
                                <th>Acción</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Filas de productos se agregarán dinámicamente -->
                        </tbody>
                        <tfoot>
                            <tr>
                                <th colspan="3">Total</th>
                                <th id="totalPrecio">0.00</th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>

                    <!-- Botón para Agregar Producto -->
                    <button type="button" id="btnAgregarProducto" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#FormularioProducto">
                        Agregar Producto
                    </button>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" id="btn_grabar_dv" class="btn btn-outline-primary">Grabar Venta</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal de Producto -->
<div class="modal fade" id="FormularioProducto" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
     aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Agregar Producto a la Venta</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="formProducto">
                    @* <div class="form-group"> *@
                    @*     <label for="id_detalle" class="control-label">Detalle Venta</label> *@
                    @*     <input id="id_detalle" readonly class="form-control" /> *@
                    @* </div> *@
                    <div class="form-group">
                        <label for="id_producto" class="control-label">Producto</label>
                        <select id="id_producto" class="form-control">
                            <option value="">Seleccione un producto</option>
                            <!-- Las opciones se agregarán aquí mediante JavaScript -->
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="cantidad" class="control-label">Cantidad</label>
                        <input id="cantidad" type="number" min="1" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="precio_unitario" class="control-label">Precio Unitario</label>
                        <input id="precio_unitario" type="number" step="0.01" class="form-control" readonly />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                @* <button type="button" id="btn_cerrar_detalle" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cerrar</button> *@
                <button type="button" id="btn_guardar_producto" class="btn btn-outline-primary">Guardar Producto</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal de Listar DV -->
<div class="modal fade" id="FormularioListarDetalle" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
     aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Detalles de la Venta</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Información de la Venta -->
                <form id="formListarDetalleVenta">
                    <table id="tablaListarDetalleVenta" class="table">
                        <thead>
                            <tr>
                                <th>ID Detalle</th>
                                <th>ID Venta</th>
                                <th>Producto</th>
                                <th>Cantidad</th>
                                <th>Precio</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Filas de detalles de venta se agregarán dinámicamente -->
                        </tbody>

                    </table>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" id="btn_cerrar" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button id="btnExportExcel" class="btn btn-success">
                    <i class="fas fa-file-excel"></i> Exportar a Excel
                </button>
                <button id="btnExportPDF" class="btn btn-danger">
                    <i class="fas fa-file-pdf"></i> Exportar a PDF
                </button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="~/lib/datatables.net/js/jquery.dataTables.min.js"></script>
    <script src="~/lib/datatables.net/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.0/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>

    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.print.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <!-- Para la tabla sin dataTable -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.js"></script>



    <script>
        let nuevoIdDetalle;

        $(document).ready(function () {
            // Inicializar DataTable
            $("#dataTable").DataTable({
                "ajax": {
                    "url": "@Url.Action("Listar", "Venta")",
                    "type": "GET",
                    "dataType": "json"
                },
                "columns": [
                    { "data": "id_venta" },
                    { "data": "fecha" },
                    { "data": "id_cliente" },
                    { "data": "id_empleado" },
                    {
                        "data": "id_venta", "render": function (data) {
                            return "<button class='btn btn-outline-primary' type='button' onclick='ListarDetalleVenta(\"" + data + "\")'> <i class='fas fa-eye'></i></button>" +
                                "<button class='btn btn-outline-danger' type='button' onclick='Eliminar(\"" + data + "\")'> <i class='fas fa-trash-alt'></i></button>";
                        },
                    }
                ],
                "order": [[0, "asc"]],
                dom: "Bfrtip",
                buttons: [
                    {
                        text: "Registrar Venta",
                        attr: { class: "btn btn-outline-primary" },
                        action: function () {
                            AbrirNuevaVenta();
                        }
                    },
                    {
                        extend: "excelHtml5",
                        text: '<i class="fas fa-file-excel"></i> Exportar a Excel',
                        attr: { class: "btn btn-success" },
                        exportOptions: {
                            columns: [0, 1, 2, 3] // Exporta las columnas de id_categoria y nombre
                        }
                    },
                    {
                        extend: "pdfHtml5",
                        text: '<i class="fas fa-file-pdf"></i> Exportar a PDF',
                        attr: { class: "btn btn-danger" },
                        exportOptions: {
                            columns: [0, 1, 2, 3] // Exporta las columnas de id_categoria y nombre
                        }
                    }
                ]
            });


            // Cargar el id_detalle en una variable
            $.ajax({
                url: '@Url.Action("Listar", "Venta")', // Ruta para obtener los datos
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    console.log(response); // Verificar la respuesta del servidor en la consola
                    if (response.data5 && response.data5.id_detalle) {
                        // Acceder correctamente a la propiedad id_detalle
                        var nuevoIdDetalle = response.data5.id_detalle;
                        console.log("id_detalle obtenido: " + nuevoIdDetalle); // Verificar el valor de la variable

                        // Ahora puedes usar la variable nuevoIdDetalle en tu lógica
                        // Ejemplo de uso:
                        // agregarProducto(nuevoIdDetalle);
                    } else {
                        // Si no hay id_detalle disponible
                        var id_Detalle = 'No hay detalles disponibles';
                        console.log(id_Detalle); // Verificar el mensaje
                    }
                },
                error: function () {
                    // Manejo de errores al cargar el id_detalle
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Hubo un problema al cargar el id_detalle. Por favor, inténtelo más tarde.',
                    });
                }
            });


            // Cargar los clientes en el dropdown
            $.ajax({
                url: '@Url.Action("Listar", "Cliente")', // Ruta para obtener los clientes
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    console.log(response); // Agregar esto para ver la respuesta del servidor
                    if (response.data && response.data.length > 0) {
                        var clienteDropdown = $('#clienteDropdown'); // Dropdown de clientes
                        clienteDropdown.empty(); // Limpiar opciones anteriores
                        clienteDropdown.append('<option value="">Seleccione un cliente</option>'); // Opción por defecto

                        // Recorrer clientes y agregar opciones
                        response.data.forEach(function (cliente) {
                            clienteDropdown.append('<option value="' + cliente.id_cliente + '">' + cliente.nombre + '</option>');
                        });
                    }
                },
                error: function () {
                    alert('Error al cargar los clientes.');
                }
            });

            // Cargar los empleados en el dropdown
            $.ajax({
                url: '@Url.Action("Listar", "Empleado")', // Ruta para obtener los empleados
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.data && response.data.length > 0) {
                        var empleadoDropdown = $('#empleadoDropdown'); // Dropdown de empleados
                        empleadoDropdown.empty(); // Limpiar opciones anteriores
                        empleadoDropdown.append('<option value="">Seleccione un empleado</option>'); // Opción por defecto

                        // Recorrer empleados y agregar opciones
                        response.data.forEach(function (empleado) {
                            empleadoDropdown.append('<option value="' + empleado.id_empleado + '">' + empleado.nombre + '</option>');
                        });
                    }
                },
                error: function () {
                    alert('Error al cargar los empleados.');
                }
            });
        });

        // Funcion para agregar nueva venta (¿Por que elegi gestion de venta? xdn't)
        function AbrirNuevaVenta() {
            $("#codigo_venta").attr("readonly", false);

            $("#codigo_venta").val("");
            $("#fecha").val("");
            $("#id_cliente").val("");
            $("#id_empleado").val("");

            $(".modal-title").text("Registrar Venta");
            $("#btn_grabar_venta").html("<i class='fas fa-save'></i> Guardar Datos");
            $("#FormularioVenta").modal("show");
            
        }

        // ========================== AQUI ESTA LA FUNCION DE GUARDAR LA VENTA ======================0
        $('#btn_grabar_venta').click(function (e) {
            e.preventDefault();

            // Recuperar los valores de los campos del formulario
            let venta = {
                "id_venta": $("#id_venta").val(),
                "fecha": $("#fecha").val(),
                "id_cliente": $("#clienteDropdown").val(),
                "id_empleado": $("#empleadoDropdown").val(),
            };

            // Verificar que todos los campos estén llenos
            if (!venta.id_venta || !venta.fecha || !venta.id_cliente || !venta.id_empleado) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Campos incompletos',
                    text: 'Por favor, complete todos los campos antes de guardar.',
                    confirmButtonText: 'Entendido',
                    confirmButtonColor: '#3085d6'
                });
                return;
            }

            // Enviar los datos al controlador utilizando AJAX
            $.ajax({
                url: '/Venta/GrabarVenta', // Ruta a tu acción en el controlador
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(venta),
                dataType: 'json',
                success: function (data) {
                    console.log(data); // Verifica si los datos son correctos

                    if (data.resultado) {
                        // Si la venta se guarda correctamente
                        Swal.fire({
                            icon: 'success',
                            title: '¡Venta registrada!',
                            text: 'La venta se ha guardado exitosamente.',
                            confirmButtonText: 'Entendido',
                            confirmButtonColor: '#3085d6'
                        });

                        // Asignar los valores al modal de venta
                        $("#id_venta").val(data.id_venta).prop("readonly", true); // Asignar el ID de venta y desactivar edición
                        $("#fecha").val(data.fecha).prop("readonly", true); // Asignar la fecha
                        $("#clienteDropdown").val(data.id_cliente); // Asignar el cliente
                        $("#empleadoDropdown").val(data.id_empleado); // Asignar el empleado

                        // Cerrar el modal de la venta
                        $('#FormularioVenta').modal('hide');

                        // Espera un poco antes de abrir el modal de detalle de venta
                        setTimeout(function () {
                            // Abre el modal de detalle de venta
                            $('#FormularioGeneral').modal('show');

                            // Asigna los valores al modal de detalle de venta
                            $("#codigo_venta").val(data.id_venta); // Código de venta
                            $("#cliente_venta").val(data.id_cliente); // Cliente de venta
                            $("#fecha_venta").val(data.fecha); // Fecha de venta

                            // Deshabilitar los inputs para que no puedan ser modificados
                            $("#codigo_venta, #cliente_venta, #fecha_venta").prop("disabled", true); // Bloquear la edición
                        }, 300);

                    } else {
                        // Si hubo un error al guardar
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'No fue posible guardar la venta. Intenta nuevamente.',
                            confirmButtonText: 'Entendido',
                            confirmButtonColor: '#d33'
                        });
                    }
                },
                error: function (error) {
                    console.error("Error en la llamada AJAX:", error.responseText);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Ocurrió un error al guardar la venta.',
                        confirmButtonText: 'Entendido',
                        confirmButtonColor: '#d33'
                    });
                }
            });


        });


        // botón del modal general
        $('#btn_grabar_dv').click(function (e) {
            e.preventDefault();

            // Verificar si la tabla de detalles de venta está vacía
            const filasProductos = $('#tablaDetalleVenta tbody tr').length;

            if (filasProductos === 0) {
                Swal.fire({
                    icon: 'warning',
                    title: 'No se puede guardar la venta',
                    text: 'Debe agregar al menos un producto a la venta.',
                    confirmButtonText: 'Entendido',
                    confirmButtonColor: '#3085d6'
                });
                return;
            }

            // Verificar si hay productos agregados en el arreglo
            if (productosAgregados.length === 0) {
                Swal.fire({
                    icon: 'warning',
                    title: 'No hay productos',
                    text: 'Debe agregar al menos un producto al detalle de la venta.',
                    confirmButtonText: 'Entendido',
                    confirmButtonColor: '#3085d6'
                });
                return;
            }

            // Obtenemos el id de la venta, que ya está guardado previamente
            let idVenta = $('#codigo_venta').val();

            // Enviar los detalles de venta al backend
            $.ajax({
                url: '@Url.Action("GrabarDetalleVenta", "Venta")', // Ruta para la acción que guarda los detalles de venta
                type: 'POST',
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify({
                    id_venta: idVenta,  // Enviar el id de la venta
                    productos: productosAgregados  // Enviar los productos agregados
                }),
                success: function (response) {
                    if (response.resultado) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Detalle de venta registrado',
                            text: 'Los detalles de la venta han sido guardados correctamente.',
                            confirmButtonText: 'Entendido',
                            confirmButtonColor: '#3085d6'
                        }).then(() => {
                            // Restablecer los productos y la tabla
                            productosAgregados = [];
                            actualizarTablaProductos(); // Actualizar la tabla de productos
                            $('#FormularioGeneral').modal('hide');

                            // Recargar la página para resetear el formulario y los detalles
                            location.reload();  // Recarga la página
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: response.mensaje || 'Hubo un problema al guardar los detalles de la venta.',
                            confirmButtonText: 'Entendido',
                            confirmButtonColor: '#d33'
                        });
                    }
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Hubo un problema al guardar los detalles de la venta. Inténtelo nuevamente.',
                        confirmButtonText: 'Entendido',
                        confirmButtonColor: '#d33'
                    });
                }
            });
        });




        $('#btnAgregarProducto').click(function (e) {
            e.preventDefault();


            // Cargar los productos en el dropdown
            $.ajax({
                url: '@Url.Action("Listar", "Producto")', // Ruta para obtener los productos
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    console.log(response); // Verificar la respuesta del servidor en la consola
                    if (response.data && response.data.length > 0) {
                        var productoDropdown = $('#id_producto'); // Dropdown de productos
                        productoDropdown.empty(); // Limpiar opciones anteriores
                        productoDropdown.append('<option value="">Seleccione un producto</option>'); // Opción por defecto

                        // Recorrer productos y agregar opciones con el precio en el atributo 'data-precio'
                        response.data.forEach(function (producto) {
                            productoDropdown.append('<option value="' + producto.id_producto + '" data-precio="' + producto.precio + '">' + producto.nombre + '</option>');
                        });
                    } else {
                        // Si no hay productos disponibles
                        $('#id_producto').empty().append('<option value="">No hay productos disponibles</option>');
                    }
                },
                error: function () {
                    // Manejo de errores al cargar los productos
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Hubo un problema al cargar los productos. Por favor, inténtelo más tarde.',
                    });
                }
            });

            // Detectar el cambio en el dropdown y actualizar el precio
            $('#id_producto').on('change', function () {
                var selectedOption = $(this).find('option:selected');
                var precio = selectedOption.data('precio'); // Obtener el precio almacenado en el atributo 'data-precio'

                // Actualizar el input con el precio seleccionado
                $('#precio_unitario').val(precio);
            });



            // Hacer que el input de precio_unitario sea readonly
            $('#precio_unitario').attr('readonly', true);

            $("#id_producto").val("");
            $("#cantidad").val("");
            $("#precio_unitario").val("");

            // Asignar el nuevo id_detalle al input con id "id_detalle"
            $('#id_detalle').val(nuevoIdDetalle).attr('readonly', true); // Asigna el id_detalle al campo input
            console.log(nuevoIdDetalle);

            // Cerrar el modal general con un retraso de 300ms antes de abrir el modal de producto
            $('#FormularioGeneral').modal('hide');

            setTimeout(function () {
                $('#FormularioProducto').modal('show');
            }, 300);
        });

        // Arreglo para almacenar los productos agregados
        let productosAgregados = [];

        $('#btn_guardar_producto').click(function (e) {
            e.preventDefault();

            // Obtener los valores de los campos
            let idProducto = $("#id_producto").val();
            let cantidad = $("#cantidad").val();
            let precioUnitario = $("#precio_unitario").val();

            // Verificar que los campos no estén vacíos
            if (!idProducto || !cantidad || !precioUnitario) {
                // Mostrar un mensaje de error con SweetAlert si algún campo está vacío
                Swal.fire({
                    icon: 'error',
                    title: 'Campos incompletos',
                    text: 'Por favor, complete todos los campos antes de guardar.',
                });
                return; // Evitar que se ejecute el código de guardado si hay campos vacíos
            }

            // Crear el objeto producto con los datos
            let producto = {
                "id_detalle": nuevoIdDetalle, // Usamos el nuevo id_detalle
                "id_producto": idProducto,
                "cantidad": cantidad,
                "precio_unitario": precioUnitario,
                "nombre_producto": $("#id_producto option:selected").text() // Obtener el nombre del producto
            };

            // Agregar el producto al arreglo
            productosAgregados.push(producto);

            // Cerrar el modal actual
            $('#FormularioProducto').modal('hide');

            setTimeout(function () {
                // Abrir el modal general después de 300ms
                $('#FormularioGeneral').modal('show');

                // Llamar a la función para actualizar la tabla con los productos agregados
                actualizarTablaProductos();

                // Restablecer los campos
                $("#id_producto").val(""); // Restablecer el dropdown
                $("#cantidad").val(""); // Restablecer la cantidad
                $("#precio_unitario").val(""); // Restablecer el precio
            }, 300);
        });


        // Función para actualizar la tabla y mostrar el total ======================================================
        function actualizarTablaProductos(id_venta) {
            // Limpiar la tabla antes de agregar nuevos productos
            $('#tablaDetalleVenta tbody').empty();

            // Variable para acumular el total
            let total = 0;

            // Filtrar los productos que tienen el mismo id_venta
            let productosFiltrados = productosAgregados.filter(function(producto) {
                return producto.id_venta === id_venta;
            });

            // Recorrer los productos filtrados y agregarlos a la tabla
            productosFiltrados.forEach(function (producto) {
                // Crear una nueva fila con los datos del producto
                let fila = `<tr>
                                <td>${producto.id_producto}</td>
                                <td>${producto.nombre_producto}</td>
                                <td>${producto.cantidad}</td>
                                <td>${producto.precio_unitario}</td>
                                <td>
                                    <button class="btn btn-danger btn-sm" onclick="eliminarProducto('${producto.id_producto}')">Eliminar</button>
                                </td>
                            </tr>`;

                // Agregar la fila a la tabla
                $('#tablaDetalleVenta tbody').append(fila);

                // Acumular el total (cantidad * precio_unitario)
                total += producto.cantidad * producto.precio_unitario;
            });

            // Actualizar el total en el tfoot
            $('#totalPrecio').text(total.toFixed(2)); // Mostrar el total con 2 decimales
        }



        // EDITAR VENTA:

        function AbrirEditarVenta(id_venta) {
            // Hacer una solicitud AJAX para obtener los datos de la venta
            jQuery.ajax({
                url: "@Url.Action("ObtenerVenta", "Venta")",  // Ruta a tu acción ObtenerVenta en el controlador
                type: "GET",
                data: { id_venta: id_venta },  // Pasar el id_venta al controlador
                dataType: "json",
                success: function (data) {
                    if (data) {
                        // Rellenar los campos del formulario en el modal
                        $("#id_venta").val(data.id_venta);
                        $("#fecha").val(data.fecha);  // Ajusta el formato si es necesario
                        $("#clienteDropdown").val(data.id_cliente); // Asignar el cliente seleccionado
                        $("#empleadoDropdown").val(data.id_empleado); // Asignar el empleado seleccionado

                        // Cambiar el texto del botón para "Actualizar" en lugar de "Registrar"
                        $("#btn_grabar_venta").text("Actualizar Venta");

                        // Mostrar el modal de venta
                        $("#FormularioVenta").modal('show');
                    }
                },
                error: function (xhr, status, error) {
                    console.log("Error al obtener los datos de la venta:", error);
                }
            });
        }



        function llenarDetallesEnTabla(detalles) {
            // Aquí puedes llenar una tabla dentro del modal con los detalles de la venta
            var tabla = $("#tablaDetallesVenta tbody");
            tabla.empty(); // Limpiar la tabla antes de agregar nuevos datos

            detalles.forEach(function (detalle) {
                var fila = $("<tr>");
                fila.append("<td>" + detalle.id_producto + "</td>");
                fila.append("<td>" + detalle.cantidad + "</td>");
                fila.append("<td>" + detalle.precio_unitario + "</td>");
                tabla.append(fila);
            });
        }



        // ELIMINAR

        function eliminarProducto(idProducto) {
            // Filtrar el producto que se eliminará
            productosAgregados = productosAgregados.filter(function (producto) {
                return producto.id_producto !== idProducto; // Eliminar el producto con el ID correspondiente
            });

            // Actualizar la tabla después de la eliminación
            actualizarTablaProductos();
        }

        function Eliminar($id_venta) {
            Swal.fire({
                title: '¿Seguro de eliminar?',
                text: "¡Esta acción no se puede deshacer!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Sí, eliminar',
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    jQuery.ajax({
                        url: "@Url.Action("Borrar", "Venta")?id_venta=" + $id_venta, // Se mantiene esta línea con comillas simples en Razor
                        type: "GET",
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            if (data.resultado) {
                                $("#dataTable").DataTable().ajax.reload();
                                Swal.fire(
                                    'Eliminado',
                                    'La categoría ha sido eliminada.',
                                    'success'
                                );
                            }
                        }
                    });
                }
            });
        }

        // ================================== LISTAR DV PARA EXCEL Y PDF ===========================<a href="#"></a>

        function ListarDetalleVenta(id_venta) {
            // Realiza la llamada AJAX para obtener los detalles de la venta
            $.ajax({
                url: "@Url.Action("ListarDetalleVenta", "Venta")", // Ruta al controlador que obtiene los detalles
                type: 'GET',
                data: { id_venta: id_venta },
                dataType: 'json',
                success: function (response) {
                    // Llenamos la tabla con los datos obtenidos
                    var detalles = response.data;
                    var tbody = $("#tablaListarDetalleVenta tbody");
                    tbody.empty();  // Limpiar la tabla antes de agregar nuevas filas

                    // Usamos un foreach para agregar cada fila a la tabla
                    detalles.forEach(function (detalle) {
                        var fila = "<tr>" +
                            "<td>" + detalle.id_detalle + "</td>" +
                            "<td>" + detalle.id_venta + "</td>" +
                            "<td>" + detalle.id_producto + "</td>" +
                            "<td>" + detalle.cantidad + "</td>" +
                            "<td>" + detalle.precio_unitario + "</td>" +
                            "</tr>";

                        // Agregar la fila a la tabla
                        tbody.append(fila);
                    });

                    // Mostrar el modal con el ID del detalle de venta
                    $('#FormularioListarDetalle').modal('show');
                },
                error: function (xhr, status, error) {
                    console.error("Error al obtener los detalles de la venta:", error);
                }
            });
        }
        
        // Función para exportar la tabla a Excel usando la librería xlsx
        $('#btnExportExcel').click(function () {
            // Obtener la tabla HTML
            var table = document.getElementById("tablaListarDetalleVenta");

            // Convertir la tabla a un formato que la librería pueda entender
            var wb = XLSX.utils.table_to_book(table, { sheet: "Detalles Venta" });

            // Exportar a Excel
            XLSX.writeFile(wb, 'detalles_venta.xlsx');
        });


        // Configuración para exportar la tabla a PDF
        $('#btnExportPDF').click(function () {
            var element = document.getElementById('tablaListarDetalleVenta'); // Seleccionamos la tabla
            var opt = {
                margin: 1,
                filename: 'detalles_venta.pdf',
                image: { type: 'jpeg', quality: 0.98 },
                html2canvas: { scale: 2 },
                jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' }
            };

            // Usamos html2pdf para exportar la tabla a PDF
            html2pdf().from(element).set(opt).save();
        });

    </script>
}


